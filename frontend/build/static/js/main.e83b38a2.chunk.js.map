{"version":3,"sources":["components/Message.js","components/ChatName.js","components/ChatInput.js","components/ChatRoom.js","components/ChatToggler.js","components/Content.js","components/SidebarToggler.js","components/Sidebar.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["ChatView","msg","side","className","src","alt","ChatName","onHideClick","width","height","cx","cy","r","fill","type","xmlns","viewBox","onClick","fillRule","d","clipRule","ChatInput","userMessage","updateInput","onEnterClick","addMessage","stroke","strokeLinecap","strokeLinejoin","strokeWidth","placeholder","value","onChange","onKeyDown","useState","reverse","messages","setMessages","setUserMessage","getAnswer","a","document","head","querySelector","FormData","append","Headers","axios","get","resp","answer","data","console","log","botAnswer","addBotMessage","newMessages","ids2","map","elem","response","newerMessages","Math","max","concat","ids","id","e","target","key","preventDefault","ChatToggler","Content","classList","toggle","class","SidebarToggler","Sidebar","App","onClickHideChat","sidebar","toggler","content","onClickHideSidebar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e83b38a2.chunk.js","sourcesContent":["\r\nexport default function ChatView({msg, side}) {\r\n    const photoRight = \"https://images.unsplash.com/photo-1549078642-b2ba4bda0cdb?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\"\r\n    const photoLeft = \"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\"\r\n\r\n    return (\r\n        <div className=\"chat-message \">\r\n            <div className={`flex items-end ${side === 'right' ? \"justify-end\" : \"\"}`}>\r\n                <div className={`flex flex-col space-y-2 text-xs max-w-xs mx-2 ${side === 'right' ? \"order-1 items-end\" : \"order-2 items-start\"} `}>\r\n                <div><span className={`px-4 py-2 rounded-lg inline-block rounded-${side === 'right' ? \"br\" : \"bl\"}-none ${side === 'right' ? \"bg-gray-300 text-gray-600\" : \"bg-blue-600 text-white\"}  `}>{msg}</span></div>\r\n                </div>\r\n                <img src={side === 'right' ? photoRight : photoLeft} alt=\"My profile\" className={`w-6 h-6 rounded-full ${side === 'right' ? \"order-2\" : \"order-1\"}`}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* <div className=\"chat-message\">\r\n              <div className=\"flex items-end justify-end\">\r\n                  <div className=\"flex flex-col space-y-2 text-xs max-w-xs mx-2 order-1 items-end\">\r\n                    <div><span className=\"px-4 py-2 rounded-lg inline-block rounded-br-none bg-blue-600 text-white \">Your error message says permission denied, npm global installs must be given root privileges.</span></div>\r\n                  </div>\r\n                  <img src=\"https://images.unsplash.com/photo-1590031905470-a1a1feacbb0b?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\" alt=\"My profile\" className=\"w-6 h-6 rounded-full order-2\"/>\r\n              </div>\r\n            </div> */","import React from 'react';\r\n\r\nexport default function ChatName({ onHideClick }) {\r\n\r\n    return (\r\n        <div className=\"flex justify-between border-b border-gray-200 dark:border-gray-900 py-3 px-3\">\r\n            <div className=\"m-0 flex items-center space-x-4\">\r\n                <img src=\"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\" alt=\"\" className=\"w-10 h-10 rounded-full\" />\r\n                <div className=\"flex flex-col leading-tight\">\r\n                    <div className=\"text-lg mt-1 flex items-center\">\r\n                        <span className=\"text-gray-700 dark:text-gray-200 mr-3\">Chatbot</span>\r\n                        <span className=\"text-green-500\">\r\n                            <svg width=\"10\" height=\"10\">\r\n                                <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"currentColor\"></circle>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n\r\n                <button type=\"button\" className=\"classic-btn text-gray-500 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-green-500 h-10 w-10\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" onClick={onHideClick}>\r\n                        <path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\" />\r\n                        <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import CSRFTOKEN from './CSRFForChat';\r\n\r\nexport default function ChatInput({ userMessage, updateInput, onEnterClick, addMessage }) {\r\n    return (\r\n        <div className=\"border-t border-gray-200 dark:border-gray-900 px-4 pt-4 mb-5 sm:mb-3 text-2lg\">\r\n            <div className=\"relative flex\">\r\n                <span className=\"absolute inset-y-0 flex items-center\">\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-12 w-12 \">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Write Something\" className=\"w-full focus:outline-none focus:placeholder-gray-400 text-gray-600 dark:text-gray-200 placeholder-gray-600 dark:placeholder-gray-300 pl-12 bg-gray-200 dark:bg-gray-700 rounded-full py-3\" \r\n                value={userMessage} onChange={updateInput} onKeyDown={onEnterClick}/>\r\n                <div className=\"absolute right-0 items-center inset-y-0 hidden sm:flex\">\r\n                    {/* <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"></path>\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button  onClick={addMessage} type=\"button\" className=\"classic-btn text-white bg-blue-500 hover:bg-blue-400 h-12 w-12\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-6 w-6 transform rotate-90\">\r\n                            <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                        </svg>\r\n                    </button> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport Message from './Message';\r\nimport ChatName from './ChatName';\r\nimport ChatInput from './ChatInput';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ChatView({ onHideClick }) {\r\n\r\n  function getCookie(name) {\r\n    let cookieValue = null;\r\n\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  const [messages, setMessages] = useState([[1, 'Hey', \"left\"], [2, \"Hi!\", \"right\"], [3, \"How are you ?\", \"left\"], [4, 'Good thanks!', \"right\"]].reverse())\r\n  const [userMessage, setUserMessage] = useState(\"\")\r\n\r\n  \r\n\r\n  const getAnswer = async () => {\r\n    // axios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n    let token = document.head.querySelector('meta[name=\"csrf-token\"]');\r\n    // axios.defaults.headers.post['X-CSRFToken'] = getCookie('csrftoken');\r\n    // let csrftoken = getCookie('csrftoken');\r\n    let data = new FormData(); // 2\r\n    data.append(\"message\", userMessage)  \r\n    // data.append(\"csrfmiddlewaretoken\", '{{csrf_token}}')\r\n    let headers = new Headers();\r\n    // headers.append('X-CSRFToken', csrftoken);\r\n    // const jsonData = JSON.stringify({message: userMessage});\r\n    // const resp = await axios.get(`http://127.0.0.1:5000/get-response/?message=${userMessage}`);\r\n    // const resp = await axios.post('http://127.0.0.1:8000/get-response', data);\r\n    const resp = await axios.get(`https://chatbot-models-app.herokuapp.com/get-response/?message=${userMessage}`);\r\n    const answer = resp.data\r\n    console.log(answer)\r\n    const botAnswer = answer.answer\r\n    if(botAnswer === 'failed'){\r\n      return false\r\n    }\r\n    return botAnswer\r\n  }\r\n\r\n  const addBotMessage = async (newMessages) => {\r\n    const ids2 = newMessages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const response = await getAnswer()\r\n    if (response){\r\n      const newerMessages = [[Math.max(...ids2)+1, response, \"left\"]].concat(newMessages)\r\n      setMessages(newerMessages)\r\n    }\r\n  }\r\n\r\n  const addMessage = async () => {\r\n    const ids = messages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const newMessages = [[Math.max(...ids)+1, userMessage, \"right\"]].concat(messages)\r\n    setMessages(newMessages)\r\n    // console.log(messages)\r\n    setUserMessage(\"\")\r\n    addBotMessage(newMessages)\r\n  }\r\n\r\n  const updateInput = (e) => {\r\n    setUserMessage(e.target.value)\r\n    // console.log(userMessage)\r\n  }\r\n  \r\n  const onEnterClick = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      addMessage()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"chat-room m-0 w-11/12 md:w-96 border-2 rounded-lg fixed bottom-2 right-2 bg-white dark:bg-gray-800 dark:text-gray-100 dark:border-gray-900 transform scale-0 transition duration-300 ease-in-out shadow-lg\" >\r\n      <div className=\"flex-1 p:2 justify-between flex flex-col h-full\">\r\n        <ChatName onHideClick={onHideClick}/>\r\n        <div id=\"messages\" className=\"h-72 flex content-end flex-col-reverse space-y-4 space-y-reverse p-3 overflow-y-auto scrollbar-thumb-blue scrollbar-thumb-rounded scrollbar-track-blue-lighter scrollbar-w-2 scrolling-touch\">\r\n          {messages.map((msg) => {\r\n            return (\r\n              <Message key={msg[0]} msg={msg[1]} side={msg[2]} />\r\n            )\r\n          })}\r\n        </div>\r\n        <ChatInput userMessage={userMessage} updateInput={updateInput} onEnterClick={onEnterClick} addMessage={addMessage}/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n","\r\nexport default function ChatToggler({ onHideClick }) {\r\n    return (\r\n\r\n        <button type=\"button\" className=\"chat-toggler classic-btn bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 fixed bottom-10 right-10 z-1\" onClick={onHideClick}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n                <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Content() {\r\n    const triggerDarkMode = () => {\r\n        const html = document.querySelector(\"html\");\r\n        html.classList.toggle(\"dark\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-site grid md:grid-cols-3 dark:bg-gray-800 dark:text-gray-200\">\r\n            <div className=\"text-center px-10 m-3 col-span-3 \">\r\n                <button type=\"button\" className=\"classic-btn bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 z-1 transition duration-300 ease-in-out\" onClick={triggerDarkMode}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"text-center text-2xl p-10  m-3 col-span-3 \">Warsaw institute of technology information</div>\r\n            <div className=\"text-center p-10 border-2 dark:border-black shadow-xl m-3 rounded-lg md:row-span-3 col-span-3 md:col-span-2 \">\r\n                <div>\r\n                    Warsaw University of Technology is a public polytechnic founded in 1915 in Warsaw on the initiative and as a result of many years of efforts by the Warsaw Scientific Society with the consent of the governor, General Hans von Beseler. It is one of the largest and best technical universities in Poland and Central and Eastern Europe. For years The Warsaw University of Technology has been ranked 1st in Poland in the \"Ranking of Higher Schools\" among technical universities published by the monthly \"Perspektywy\".\r\n\r\n                </div>\r\n                <div>\r\n                    According to the webometric ranking of universities of the world from January 2019, showing the involvement of academic institutions in the Internet, the university is ranked first in Poland among technical universities, and in the world 503 among all types of universities.\r\n\r\n                    The official date of establishing the Warsaw University of Technology is 1915, but from 1898 there was the Polytechnic Institute in Warsaw with Russian as the language of instruction. The university dates back to 1826, when the Preparatory School for the Polytechnic Institute was established. The main University of Technology complex is located in the center of Warsaw. It is the area between Aleja Niepodległości, Aleja Armii Ludowej and the streets of Polna, Noakowskiego and Koszykowa. The main building at the Politechnika Square is occupied by the Main Building, which houses the faculties of AiNS, Electrical and GiK. The buildings of the departments of Chemistry, EiTI, Physics, IL, WIBHiIŚ, MiNI, MEiL and Transport are located around. Near the Main Campus there are also the Faculty of Architecture at Koszykowa Street and the Faculty of IChiP, DS \"Riviera\" and DS Mikrus at Waryńskiego Street.\r\n                </div>\r\n\r\n                The University of Technology has a branch in Płock. It houses the Faculty of Civil Engineering, Mechanics and Petrochemistry, the College of Economic and Social Sciences, DS Wcześniak, and other facilities (sports, teaching, laboratories).\r\n            </div>\r\n            <div className=\"text-center text-2xl py-3 px-10 border-2 dark:border-black shadow-xl m-3 rounded-lg col-span-3 md:col-span-1\">\r\n                <img className=\"my-5\" src='https://www.galczynski.com/wp-content/uploads/T3S-Galczynski_com-Warszawa-Politechnika-5344-1500px.jpg'></img>\r\n            </div>\r\n\r\n            <div className=\"text-center text-2xl p-10 border-2 dark:border-black shadow-xl m-3 rounded-lg col-span-3 md:col-span-1\">Info</div>\r\n            <div className=\"text-center text-2xl p-10 border-2 dark:border-black shadow-xl m-3 rounded-lg col-span-3 md:col-span-1\">Info</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","\r\nexport default function SidebarToggler({ onHideClick }) {\r\n    return (\r\n\r\n        <button type=\"button\" className=\"sidebar-toggler classic-btn bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 fixed top-5 left-5 transition duration-300 ease-in-out \" onClick={onHideClick}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fill-rule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n            </svg>\r\n        </button>\r\n    )\r\n}","\r\nexport default function Sidebar({ onHideClick }) {\r\n    return (\r\n        <div className=\"sidebar bg-gray-200 dark:bg-gray-600 h-full w-56 fixed flex flex-col inset-y-0 left-0 transform -translate-x-full transition duration-300 ease-in-out z-40\">\r\n            <button type=\"button\" className=\"border classic-btn bg-gray-100 text-gray-500 hover:bg-green-100 h-12 w-12 ml-5 mt-5 mb-10\" onClick={onHideClick}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fill-rule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clip-rule=\"evenodd\"/>\r\n                </svg>\r\n            </button>\r\n            <div className=\"sidebar-elem\">Chatbot BERT</div>\r\n            <div className=\"sidebar-elem\">Chatbot Bag-Of-Words</div>\r\n            <div className=\"sidebar-elem\">Chatbot Word-Embedings-Class</div>\r\n            <div className=\"sidebar-elem\">Chatbot conversational</div>\r\n\r\n        </div>\r\n    )\r\n}","import ChatView from './components/ChatRoom';\nimport ChatToggler from './components/ChatToggler';\nimport Content from './components/Content';\nimport SidebarToggler from './components/SidebarToggler';\nimport Sidebar from './components/Sidebar';\n// import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const onClickHideChat = () => {\n    const sidebar = document.querySelector('.chat-room')\n    const toggler = document.querySelector(\".chat-toggler\")\n    const content = document.querySelector(\".content-site\")\n\n    sidebar.classList.toggle(\"scale-100\");\n    sidebar.classList.toggle(\"scale-0\");\n    toggler.classList.toggle(\"bottom-10\")\n    toggler.classList.toggle(\"-bottom-10\")\n    toggler.classList.toggle(\"right-10\")\n    toggler.classList.toggle(\"-right-10\")\n    content.classList.toggle(\"filter\")\n    content.classList.toggle(\"blur-sm\")\n  }\n\n  const onClickHideSidebar = () => {\n    // if (hiddenSidebar === true) {\n    //   sethiddenSidebar(false)\n    // } else {\n    //   sethiddenSidebar(true)\n    // }\n    const sidebar = document.querySelector('.sidebar')\n    const toggler = document.querySelector(\".sidebar-toggler\")\n\n    sidebar.classList.toggle(\"-translate-x-full\");\n\n  }\n\n  return (\n    <div className=\"m-0\">\n      <Content />\n\n      <Sidebar onHideClick={onClickHideSidebar} /> \n      <SidebarToggler onHideClick={onClickHideSidebar}/>\n\n      <ChatView onHideClick={onClickHideChat} />\n      <ChatToggler onHideClick={onClickHideChat}/>\n      \n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\nserviceWorkerRegistration.register();\n\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}