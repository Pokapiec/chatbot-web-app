{"version":3,"sources":["components/Message.js","components/ChatName.js","components/ChatInput.js","components/ChatRoom.js","components/ChatToggler.js","App.js","reportWebVitals.js","index.js"],"names":["ChatView","msg","side","className","src","alt","ChatName","onHideClick","width","height","cx","cy","r","fill","type","xmlns","viewBox","onClick","fillRule","d","clipRule","ChatInput","userMessage","updateInput","onEnterClick","addMessage","stroke","strokeLinecap","strokeLinejoin","strokeWidth","placeholder","value","onChange","onKeyDown","useState","reverse","messages","setMessages","setUserMessage","getAnswer","a","document","head","querySelector","FormData","append","Headers","axios","get","resp","answer","data","console","log","botAnswer","addBotMessage","newMessages","ids2","map","elem","response","newerMessages","Math","max","concat","ids","id","e","target","key","preventDefault","ChatToggler","App","hiddenChat","sethiddenChat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9b4eddd9.chunk.js","sourcesContent":["\r\nexport default function ChatView({msg, side}) {\r\n    const photoRight = \"https://images.unsplash.com/photo-1549078642-b2ba4bda0cdb?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\"\r\n    const photoLeft = \"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\"\r\n\r\n    return (\r\n        <div className=\"chat-message\">\r\n            <div className={`flex items-end ${side === 'right' ? \"justify-end\" : \"\"}`}>\r\n                <div className={`flex flex-col space-y-2 text-xs max-w-xs mx-2 ${side === 'right' ? \"order-1 items-end\" : \"order-2 items-start\"} `}>\r\n                <div><span className={`px-4 py-2 rounded-lg inline-block rounded-${side === 'right' ? \"br\" : \"bl\"}-none ${side === 'right' ? \"bg-gray-300 text-gray-600\" : \"bg-blue-600 text-white\"}`}>{msg}</span></div>\r\n                </div>\r\n                <img src={side === 'right' ? photoRight : photoLeft} alt=\"My profile\" className={`w-6 h-6 rounded-full ${side === 'right' ? \"order-2\" : \"order-1\"}`}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* <div className=\"chat-message\">\r\n              <div className=\"flex items-end justify-end\">\r\n                  <div className=\"flex flex-col space-y-2 text-xs max-w-xs mx-2 order-1 items-end\">\r\n                    <div><span className=\"px-4 py-2 rounded-lg inline-block rounded-br-none bg-blue-600 text-white \">Your error message says permission denied, npm global installs must be given root privileges.</span></div>\r\n                  </div>\r\n                  <img src=\"https://images.unsplash.com/photo-1590031905470-a1a1feacbb0b?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\" alt=\"My profile\" className=\"w-6 h-6 rounded-full order-2\"/>\r\n              </div>\r\n            </div> */","import React from 'react';\r\n\r\nexport default function ChatName({ onHideClick }) {\r\n\r\n    return (\r\n        <div className=\"flex justify-between border-b-2 border-gray-200 py-3 px-3\">\r\n            <div className=\"m-0 flex items-center space-x-4\">\r\n                <img src=\"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\" alt=\"\" className=\"w-10 h-10 rounded-full\" />\r\n                <div className=\"flex flex-col leading-tight\">\r\n                    <div className=\"text-lg mt-1 flex items-center\">\r\n                        <span className=\"text-gray-700 mr-3\">Chatbot</span>\r\n                        <span className=\"text-green-500\">\r\n                            <svg width=\"10\" height=\"10\">\r\n                                <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"currentColor\"></circle>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                    {/* <span className=\"text-lg text-gray-600 hidden md:block\">University information specialist</span> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n                {/* <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-5 w-5\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n                    </svg>\r\n                </button>\r\n                <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-5 w-5\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"></path>\r\n                    </svg>\r\n                </button> */}\r\n                <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-7 w-7\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" onClick={onHideClick}>\r\n                        <path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\" />\r\n                        <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import CSRFTOKEN from './CSRFForChat';\r\n\r\nexport default function ChatInput({ userMessage, updateInput, onEnterClick, addMessage }) {\r\n    return (\r\n        <div className=\"border-t-2 border-gray-200 px-4 pt-4 mb-5 sm:mb-3 text-2lg\">\r\n            <div className=\"relative flex\">\r\n                <span className=\"absolute inset-y-0 flex items-center\">\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-12 w-12 \">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </span>\r\n                <input type=\"text\" placeholder=\"Write Something\" className=\"w-full focus:outline-none focus:placeholder-gray-400 text-gray-600 placeholder-gray-600 pl-12 bg-gray-200 rounded-full py-3\" \r\n                value={userMessage} onChange={updateInput} onKeyDown={onEnterClick}/>\r\n                <div className=\"absolute right-0 items-center inset-y-0 hidden sm:flex\">\r\n                    {/* <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"></path>\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button  onClick={addMessage} type=\"button\" className=\"classic-btn text-white bg-blue-500 hover:bg-blue-400 h-12 w-12\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-6 w-6 transform rotate-90\">\r\n                            <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                        </svg>\r\n                    </button> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport Message from './Message';\r\nimport ChatName from './ChatName';\r\nimport ChatInput from './ChatInput';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ChatView({ onHideClick }) {\r\n\r\n  function getCookie(name) {\r\n    let cookieValue = null;\r\n\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  const [messages, setMessages] = useState([[1, 'Hey', \"left\"], [2, \"Hi!\", \"right\"], [3, \"How are you ?\", \"left\"], [4, 'Good thanks!', \"right\"]].reverse())\r\n  const [userMessage, setUserMessage] = useState(\"\")\r\n\r\n  \r\n\r\n  const getAnswer = async () => {\r\n    // axios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n    let token = document.head.querySelector('meta[name=\"csrf-token\"]');\r\n    // axios.defaults.headers.post['X-CSRFToken'] = getCookie('csrftoken');\r\n    // let csrftoken = getCookie('csrftoken');\r\n    let data = new FormData(); // 2\r\n    data.append(\"message\", userMessage)  \r\n    // data.append(\"csrfmiddlewaretoken\", '{{csrf_token}}')\r\n    let headers = new Headers();\r\n    // headers.append('X-CSRFToken', csrftoken);\r\n    // const jsonData = JSON.stringify({message: userMessage});\r\n    // const resp = await axios.post('http://127.0.0.1:8000/get-response', data);\r\n    const resp = await axios.get(`http://127.0.0.1:5000/get-response/?message=${userMessage}`);\r\n    const answer = resp.data\r\n    console.log(answer)\r\n    const botAnswer = answer.answer\r\n    if(botAnswer === 'failed'){\r\n      return false\r\n    }\r\n    return botAnswer\r\n  }\r\n\r\n  const addBotMessage = async (newMessages) => {\r\n    const ids2 = newMessages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const response = await getAnswer()\r\n    if (response){\r\n      const newerMessages = [[Math.max(...ids2)+1, response, \"left\"]].concat(newMessages)\r\n      setMessages(newerMessages)\r\n    }\r\n  }\r\n\r\n  const addMessage = async () => {\r\n    const ids = messages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const newMessages = [[Math.max(...ids)+1, userMessage, \"right\"]].concat(messages)\r\n    setMessages(newMessages)\r\n    // console.log(messages)\r\n    setUserMessage(\"\")\r\n    addBotMessage(newMessages)\r\n  }\r\n\r\n  const updateInput = (e) => {\r\n    setUserMessage(e.target.value)\r\n    // console.log(userMessage)\r\n  }\r\n  \r\n  const onEnterClick = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      addMessage()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"m-0 w-96 border rounded-lg fixed bottom-2 right-2\" >\r\n      <div className=\"flex-1 p:2 justify-between flex flex-col h-full\">\r\n        <ChatName onHideClick={onHideClick}/>\r\n        <div id=\"messages\" className=\"h-72 flex content-end flex-col-reverse space-y-4 space-y-reverse p-3 overflow-y-auto scrollbar-thumb-blue scrollbar-thumb-rounded scrollbar-track-blue-lighter scrollbar-w-2 scrolling-touch\">\r\n          {messages.map((msg) => {\r\n            return (\r\n              <Message key={msg[0]} msg={msg[1]} side={msg[2]} />\r\n            )\r\n          })}\r\n        </div>\r\n        <ChatInput userMessage={userMessage} updateInput={updateInput} onEnterClick={onEnterClick} addMessage={addMessage}/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n","\r\nexport default function ChatToggler({ onHideClick }) {\r\n    return (\r\n\r\n        <button type=\"button\" className=\"border classic-btn text-gray-500 hover:bg-gray-300 h-12 w-12 fixed bottom-10 right-10\" onClick={onHideClick}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n                <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n        </button>\r\n    )\r\n}","import ChatView from './components/ChatRoom';\nimport ChatToggler from './components/ChatToggler';\nimport { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [hiddenChat, sethiddenChat] = useState(false)\n\n  const onHideClick = () => {\n    if (hiddenChat === true) {\n      sethiddenChat(false)\n    } else {\n      sethiddenChat(true)\n    }\n  }\n\n  return (\n    <div className=\"m-0\">\n      { hiddenChat === false ? <ChatView onHideClick={onHideClick} /> : <ChatToggler onHideClick={onHideClick}/> }\n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}