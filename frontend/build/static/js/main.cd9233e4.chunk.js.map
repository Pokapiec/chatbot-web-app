{"version":3,"sources":["components/context/Contexts.js","components/Message.js","components/ChatName.js","components/ChatInput.js","components/ChatRoom.js","components/ChatToggler.js","components/ContentTexts.js","components/ContentHeader.js","components/Sidebar.js","components/About.js","components/Footer.js","components/Content.js","components/SidebarToggler.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["LanguageContext","createContext","TextContext","CasualContext","ChatView","msg","side","className","src","alt","ChatName","onHideClick","modeEn","modePl","useState","maximized","setMaximized","language","useContext","casualQuery","setcasualQuery","type","onClick","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","chat","document","querySelector","messages","elem","classList","toggle","contains","replace","width","height","points","x1","y1","x2","y2","xmlns","fillRule","clipRule","ChatInput","userMessage","updateInput","onEnterClick","addMessage","setMessages","reverse","placeholder","value","onChange","onKeyDown","ChatRoom","textId","useEffect","setUserMessage","getAnswer","a","url","axios","get","resp","answer","data","botAnswer","addBotMessage","newMessages","ids2","map","oldMessages","loadMessages","Math","max","concat","response","newerMessages","ids","id","key","e","target","preventDefault","ChatToggler","ContentTexts","texts","setAndUnfoldText","length","item","index","title_en","title_pl","text_en","text_pl","ContentHeader","title","triggerDarkMode","changeLanguage","dark","Sidebar","choseMode","to","About","setTitle","border","chartType","loader","options","hAxis","color","titleTextStyle","textStyle","vAxis","backgroundColor","legendTextStyle","rootProps","Footer","Content","onClickHideSidebar","setlanguage","settextId","setdark","settexts","html","localStorage","setItem","darkMode","getItem","then","catch","error","console","log","getData","headerProps","path","exact","textElem","currentTarget","children","allTexts","querySelectorAll","text","nextElementSibling","SidebarToggler","App","onClickHideChat","toggler","content","onKeyUp","sidebar","keyCode","Provider","query","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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,wBAAIV,UAAU,QAAmB,OAAXU,EAAkB,iCAAmC,uCAC3E,yBAAKV,UAAU,oCACX,2BAAO2G,OAAO,IAAI3G,UAAU,8DACxB,+BACI,4BACI,oCACA,mCACA,mCACA,mCACA,mCACA,sCACA,sCACA,0CACA,6CAGR,+BACI,4BACI,4DACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,uCAEJ,4BACI,gEACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,uCAEJ,4BACI,qEACA,sCACA,sCACA,uCACA,sCACA,sCACA,kCACA,sCACA,uCAEJ,4BACI,yDACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,uCAEJ,4BACI,oEACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,uCAEJ,4BACI,qEACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,uCAEJ,4BACI,8DACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,uCAEJ,4BACI,2DACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,uCAEJ,4BACI,4DACA,sCACA,sCACA,uCACA,sCACA,sCACA,kCACA,sCACA,uCAEJ,4BACI,sEACA,sCACA,sCACA,uCACA,sCACA,sCACA,mCACA,sCACA,0CAOhB,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,4DACX,kBAAC,IAAD,CACI4G,UAAU,YACVC,OAAQ,8CACR1C,KAAM,CACF,CAAC,SAAU,SACX,CAAC,GAAM,OACP,CAAC,GAAM,OACP,CAAC,IAAO,OACR,CAAC,IAAO,OACR,CAAC,IAAO,OACR,CAAC,IAAO,OACR,CAAC,IAAO,OACR,CAAC,IAAO,OACR,CAAC,IAAO,OACR,CAAC,IAAO,OAEZ2C,QAAST,EAAO,CACZU,MAAO,CACHb,MAAO,SACPc,MAAO,OACPC,eAAgB,CAAED,MAAO,QACzBE,UAAW,CAAEF,MAAO,SAExBG,MAAO,CACHjB,MAAO,QACPc,MAAO,OACPC,eAAgB,CAAED,MAAO,QACzBE,UAAW,CAAEF,MAAO,SAExBI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","file":"static/js/main.cd9233e4.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const LanguageContext = createContext(null)\r\n\r\nexport const TextContext = createContext(null)\r\n\r\nexport const CasualContext = createContext(null)\r\n\r\nexport const UrlContext = createContext(null)\r\n\r\n","import React from 'react';\r\n\r\nexport default function ChatView({msg, side}) {\r\n    const photoRight = \"https://images.unsplash.com/photo-1549078642-b2ba4bda0cdb?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\"\r\n    const photoLeft = \"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\"\r\n\r\n    return (\r\n        <div className=\"chat-message\">\r\n            <div className={`flex items-end ${side === 'right' ? \"justify-end\" : \"\"}`}>\r\n                <div className={`flex flex-col space-y-2 text-xs max-w-xs mx-2 ${side === 'right' ? \"order-1 items-end\" : \"order-2 items-start\"} `}>\r\n                <div><span className={`px-4 py-2 rounded-lg inline-block rounded-${side === 'right' ? \"br\" : \"bl\"}-none ${side === 'right' ? \"bg-gray-300 text-gray-600\" : \"bg-blue-600 text-white\"}`}>{msg}</span></div>\r\n                </div>\r\n                <img src={side === 'right' ? photoRight : photoLeft} alt=\"My profile\" className={`w-6 h-6 rounded-full ${side === 'right' ? \"order-2\" : \"order-1\"}`}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* <div className=\"chat-message\">\r\n              <div className=\"flex items-end justify-end\">\r\n                  <div className=\"flex flex-col space-y-2 text-xs max-w-xs mx-2 order-1 items-end\">\r\n                    <div><span className=\"px-4 py-2 rounded-lg inline-block rounded-br-none bg-blue-600 text-white \">Your error message says permission denied, npm global installs must be given root privileges.</span></div>\r\n                  </div>\r\n                  <img src=\"https://images.unsplash.com/photo-1590031905470-a1a1feacbb0b?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\" alt=\"My profile\" className=\"w-6 h-6 rounded-full order-2\"/>\r\n              </div>\r\n            </div> */","import React from 'react';\r\nimport { useState, useContext } from 'react';\r\nimport { LanguageContext, CasualContext } from './context/Contexts';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function ChatName({ onHideClick, modeEn, modePl }) {\r\n\r\n    const [maximized, setMaximized] = useState(false);\r\n    const { language } = useContext(LanguageContext);\r\n    const { casualQuery, setcasualQuery } = useContext(CasualContext);\r\n\r\n    const changeMode = () => {\r\n        if (casualQuery) setcasualQuery(\"\")\r\n        else setcasualQuery(\"&casual=true\")\r\n    }\r\n\r\n    const maximize = () => {\r\n        const chat = document.querySelector('.chat-room');\r\n        const messages = document.querySelector('#messages-place');\r\n\r\n        const chatClasses = ['w-10/12', 'md:w-96', 'bottom-2', 'right-2', 'bottom-0', 'right-0', 'w-full', 'rounded-lg', 'h-screen']\r\n        for (const elem of chatClasses) {\r\n            chat.classList.toggle(elem)\r\n        }\r\n\r\n        if (messages.classList.contains('h-72')) {\r\n            messages.classList.replace('h-72', 'h-full')\r\n        } else {\r\n            messages.classList.replace('h-full', 'h-72')\r\n        }\r\n        // for(const elem of messagesClasses) {\r\n        //     messages.classList.toggle(elem)\r\n        // }\r\n\r\n        if (maximized) setMaximized(false)\r\n        else setMaximized(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"transition duration-300 ease-in-out flex justify-between border-b border-gray-200 dark:border-gray-900 py-3 px-3\">\r\n            <div className=\"m-0 flex items-center space-x-4 \">\r\n                <img src=\"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\" alt=\"\" className=\"w-10 h-10 rounded-full hidden md:block\" />\r\n                <div className=\"flex flex-col leading-tight\">\r\n                    <div className=\"text-lg mt-1 flex items-center\">\r\n                        <span className=\"text-gray-700 dark:text-gray-200 mr-3\">\r\n                            Chatbot\r\n                            <div className='text-sm text-gray-400'>\r\n                                {language === 'EN'\r\n                                    ?\r\n                                    modeEn\r\n                                    :\r\n                                    modePl\r\n                                }\r\n                            </div>\r\n                        </span>\r\n\r\n                        {/* <span className=\"text-green-500\">\r\n                            <svg width=\"10\" height=\"10\">\r\n                                <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"currentColor\"></circle>\r\n                            </svg>\r\n                        </span> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n                <button type=\"button\" className=\"group classic-btn text-gray-500 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-green-500 h-10 w-10\" onClick={changeMode}>\r\n                    <span className=\"p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-28 absolute top-16 right-24 transform scale-0 group-hover:scale-100 transition-all duration-300 ease-in-out\">{language===\"EN\" ? \"Change mode\" : \"Zmień tryb\"}</span>\r\n                    <svg className=\"h-6 w-6\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />  <circle cx=\"9\" cy=\"7\" r=\"4\" />  <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />  <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" /></svg>\r\n                </button>\r\n                <button type=\"button\" className=\"classic-btn text-gray-500 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-green-500 h-10 w-10\" onClick={maximize}>\r\n                    {!maximized ?\r\n                        (<svg className=\"h-6 w-6 fill-stroke\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\"></path>  <polyline points=\"16 4 20 4 20 8\"></polyline>  <line x1=\"14\" y1=\"10\" x2=\"20\" y2=\"4\"></line>  <polyline points=\"8 20 4 20 4 16\"></polyline>  <line x1=\"4\" y1=\"20\" x2=\"10\" y2=\"14\"></line></svg>)\r\n                        :\r\n                        (<svg className=\"h-6 w-6 fill-stroke\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\"></path>  <polyline points=\"5 9 9 9 9 5\"></polyline>  <line x1=\"3\" y1=\"3\" x2=\"9\" y2=\"9\"></line>  <polyline points=\"5 15 9 15 9 19\"></polyline>  <line x1=\"3\" y1=\"21\" x2=\"9\" y2=\"15\"></line>  <polyline points=\"19 9 15 9 15 5\"></polyline>  <line x1=\"15\" y1=\"9\" x2=\"21\" y2=\"3\"></line>  <polyline points=\"19 15 15 15 15 19\"></polyline>  <line x1=\"15\" y1=\"15\" x2=\"21\" y2=\"21\"></line></svg>)\r\n                    }\r\n\r\n                </button>\r\n\r\n\r\n\r\n                <button type=\"button\" className=\"classic-btn text-gray-500 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-green-500 h-10 w-10\" onClick={onHideClick}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nChatName.propTypes = {\r\n    onHideClick: PropTypes.func, \r\n    modeEn: PropTypes.string, \r\n    modePl: PropTypes.string\r\n}","import React from 'react';\r\nimport { LanguageContext } from './context/Contexts';\r\nimport { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function ChatInput({ userMessage, updateInput, onEnterClick, addMessage, setMessages }) {\r\n\r\n    const { language } = useContext(LanguageContext)\r\n\r\n    const clearChatArea = () => {\r\n        if (language === \"EN\") {\r\n            setMessages([[1, \"Hey i'm your personal Chatbot, how can i help?\", \"left\"]].reverse())\r\n        } else {\r\n            setMessages([[1, \"Hej! Jestem twoim personalnym Chatbotem, jak mogę pomóc?\", \"left\"]].reverse())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"border-t border-gray-200 dark:border-gray-900 px-4 pt-4 mb-5 sm:mb-3 text-2lg\">\r\n            <div className=\"relative flex\">\r\n                <span className=\"absolute inset-y-0 flex items-center\">\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 dark:text-gray-200 dark:hover:text-gray-800 hover:bg-gray-300  dark:hover:bg-gray-400 h-12 w-12 \" onClick={clearChatArea}>\r\n                        <svg className=\"h-6 w-6 text-gray-500\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />  <line x1=\"4\" y1=\"7\" x2=\"20\" y2=\"7\" />  <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />  <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />  <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />  <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" /></svg>\r\n                    </button>\r\n                </span>\r\n                <input type=\"text\" placeholder={language === \"EN\" ? \"Write Something\" : \"Napisz coś\"} className=\"w-full border-none focus:outline-none focus:placeholder-gray-400 text-gray-600 dark:text-gray-200 placeholder-gray-600 dark:placeholder-gray-300 pl-12 bg-gray-200 dark:bg-gray-600 rounded-full py-3 \"\r\n                    value={userMessage} onChange={updateInput} onKeyDown={onEnterClick} />\r\n                <div className=\"absolute right-0 items-center inset-y-0 hidden sm:flex\">\r\n                    <button onClick={addMessage} type=\"button\" className=\"classic-btn text-white bg-blue-500 hover:bg-blue-400 h-12 w-12\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-6 w-6 transform rotate-90\">\r\n                            <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nChatInput.propTypes = {\r\n    userMessage: PropTypes.string, \r\n    updateInput: PropTypes.func, \r\n    onEnterClick: PropTypes.func, \r\n    addMessage: PropTypes.func, \r\n    setMessages: PropTypes.func\r\n}","import React from 'react';\r\nimport { LanguageContext, TextContext } from './context/Contexts';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport Message from './Message';\r\nimport ChatName from './ChatName';\r\nimport ChatInput from './ChatInput';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function ChatRoom({ onHideClick, casualQuery }) {\r\n\r\n  const { language } = useContext(LanguageContext)\r\n  const { textId } = useContext(TextContext)\r\n\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (language === \"EN\") {\r\n      setMessages([[1, \"Hey i'm your personal Chatbot, how can i help?\", \"left\"]].reverse())\r\n    } else {\r\n      setMessages([[1, \"Hej! Jestem twoim personalnym Chatbotem, jak mogę pomóc?\", \"left\"]].reverse())\r\n    }\r\n    return\r\n  }, [language, casualQuery]);\r\n\r\n  const [userMessage, setUserMessage] = useState(\"\")\r\n\r\n\r\n  const getAnswer = async () => {\r\n\r\n    let url = `/resp/get?message=${userMessage}&lang=${language}`\r\n    // let url = `http://127.0.0.1:5000/response?message=${userMessage}&lang=${language}`\r\n    if (casualQuery) url += casualQuery\r\n    else url += `&textid=${textId}`\r\n    // console.log(url)\r\n\r\n    const resp = await axios.get(url);\r\n    // const resp = await axios.get(`https://chatbot-models-app.herokuapp.com/response?message=${userMessage}`);\r\n    const answer = resp.data\r\n    // console.log(answer)\r\n    const botAnswer = answer.answer\r\n    if (botAnswer === 'failed') return false\r\n    return botAnswer\r\n  }\r\n\r\n  const addBotMessage = async (newMessages) => {\r\n    const ids2 = newMessages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const oldMessages = newMessages\r\n    const loadMessages = [[Math.max(...ids2) + 1, <div className='dot-falling mx-1 my-1'></div>, \"left\"]].concat(newMessages)\r\n    setMessages(loadMessages)\r\n    const response = await getAnswer()\r\n    if (response) {\r\n      const newerMessages = [[Math.max(...ids2) + 1, response, \"left\"]].concat(newMessages)\r\n      setMessages(newerMessages)\r\n    } else {\r\n      // let filteredLoading = oldMessages.filter(item => {\r\n      //   item[1] != <div className='dot-falling mx-1 my-1'></div>\r\n      // });\r\n      setMessages(oldMessages)\r\n    }\r\n  }\r\n\r\n  const addMessage = async () => {\r\n    if (!userMessage) return\r\n    const ids = messages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const newMessages = [[Math.max(...ids) + 1, userMessage, \"right\"]].concat(messages)\r\n    setMessages(newMessages)\r\n    // console.log(messages)\r\n    setUserMessage(\"\")\r\n    addBotMessage(newMessages)\r\n  }\r\n\r\n  const updateInput = (e) => {\r\n    setUserMessage(e.target.value)\r\n    // console.log(userMessage)\r\n  }\r\n\r\n  const onEnterClick = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      addMessage()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"chat-room m-0 w-10/12 md:w-128 border-2 rounded-lg fixed bottom-2 right-2 bg-white dark:bg-gray-700 dark:text-gray-100 dark:border-gray-800 transform scale-0 transition-all duration-300 ease-in-out shadow-lg z-40\">\r\n      <div id=\"messages\" className=\"flex-1 p:2 justify-between flex flex-col h-full\">\r\n        {casualQuery\r\n          ?\r\n          <ChatName onHideClick={onHideClick} modeEn={`Mode: casual talk`} modePl={`Tryb: swobodna rozmowa`}/>\r\n          :\r\n          <ChatName onHideClick={onHideClick} modeEn={`Mode: q&a, Text: ${textId}`} modePl={`Tryb: q&a, Tekst: ${textId}`}/>\r\n        }\r\n        <div id=\"messages-place\" className=\"h-72 flex content-end flex-col-reverse space-y-4 space-y-reverse p-3 overflow-y-auto scrollbar-thumb-blue scrollbar-thumb-rounded scrollbar-track-blue-lighter scrollbar-w-2 scrolling-touch\">\r\n          {messages.map((msg) => {\r\n            return (\r\n              <Message key={msg[0]} msg={msg[1]} side={msg[2]} />\r\n            )\r\n          })}\r\n        </div>\r\n        <ChatInput userMessage={userMessage} updateInput={updateInput} onEnterClick={onEnterClick} addMessage={addMessage} setMessages={setMessages} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nChatRoom.propTypes = {\r\n  casualQuery: PropTypes.string, \r\n  onHideClick: PropTypes.func\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function ChatToggler({ onHideClick }) {\r\n    \r\n    return (\r\n        <div className=\"select-none\">\r\n            <button type=\"button\" className=\"group chat-toggler classic-btn bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 fixed bottom-10 right-10 z-1 \" onClick={onHideClick}>\r\n                <span className=\"p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-20 absolute bottom-14 transform scale-0 group-hover:scale-100 transition-all duration-300 ease-in-out\">Chat a bit</span>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 group-hover:animate-wiggle\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\" />\r\n                </svg>\r\n\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nChatToggler.propTypes = {\r\n    onHideClick: PropTypes.func\r\n}","import React from 'react';\r\n// import { TextContext } from './context/Contexts';\r\nimport '../App.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContentTexts = ({ texts, language, setAndUnfoldText }) => {\r\n    // const { textId } = useContext(TextContext)\r\n    \r\n    return (\r\n        <div className=\"flex flex-col flex-wrap content-center w-full\">\r\n            {texts.length > 0\r\n                ?\r\n                (texts.map((item, index) => (\r\n                    <div className=\"slider relative -left-full group content-container w-11/12 md:w-10/12 lg:max-w-5xl md:max-w-6xl border-2 transform hover:-translate-y-1\" onClick={(e) => { setAndUnfoldText(item, e) }} key={item.id}>\r\n                        <h2 className=\"text-left font-bold border-b-2 border-gray-300 pb-6 text-xl lg:text-xl lg:pb-10\">\r\n                            {index + 1}. {language === \"EN\" ? item.title_en : item.title_pl}\r\n                        </h2>\r\n                        <div className=\"QA-text mt-8 text-left overflow-hidden filter transition-height duration-300 ease-in-out h-10\">{language === \"EN\" ? item.text_en : item.text_pl}\r\n                        </div>\r\n                        <div className='transition-all duration-300 ease-in-out bg-gradient-to-t from-white group-hover:from-gray-100 dark:from-gray-800 dark:group-hover:from-gray-700 h-10 w-full absolute bottom-10 left-0'>\r\n                        </div>\r\n\r\n                        {/* {textId != item.id\r\n                            &&\r\n                            <svg className=\"h-8 w-8 fill-stroke text-gray-700 dark:text-gray-300 hover:text-green-500 dark:hover:text-green-500 absolute top-10 right-10\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <polyline points=\"6 9 12 15 18 9\"></polyline></svg>\r\n                        } */}\r\n\r\n                    </div>\r\n                )))\r\n                :\r\n                (<div className=\"content-container max-w-6xl border-2 w-9/12\" key=\"1\">\r\n                    <h2 className=\"text-left font-bold border-b-2 border-gray-300 pb-4\">\r\n                        {language === \"EN\" ? \"There has been a problem\" : \"Wystąpił problem\"}\r\n                    </h2>\r\n                    <div className=\"QA-text mt-5\">\r\n                        {language === \"EN\" ? \"No article avilable right now\" : \"Nie znaleziono żadnego artykułu\"}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentTexts;\r\n\r\n\r\nContentTexts.propTypes = {\r\n    texts: PropTypes.array, \r\n    language: PropTypes.string, \r\n    setAndUnfoldText: PropTypes.func\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContentHeader = ({ title, triggerDarkMode, changeLanguage, language, dark }) => {\r\n    return (\r\n        <header className=\"w-full\">\r\n            <button type=\"button\" className=\"group classic-btn dark:bg-gray-800 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 z-1 transition duration-300 ease-in-out absolute top-5 right-5 select-none\" onClick={triggerDarkMode}>\r\n                <span className=\"p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-28 absolute top-14 right-2 transform scale-0 group-hover:scale-100 transition-all duration-300 ease-in-out\">Change theme</span>\r\n\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 animate-shortspin\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    {dark\r\n                        ?\r\n                        (<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />)\r\n                        :\r\n                        (<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />)\r\n                    }\r\n                </svg>\r\n            </button>\r\n\r\n            <button id=\"lang\" type=\"button\" className=\"group classic-btn  dark:bg-gray-800 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 z-1 transition duration-300 ease-in-out absolute top-5 right-20 select-none\" onClick={changeLanguage}>\r\n                <span className=\"p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-32 absolute top-14 right-2 transform scale-0 group-hover:scale-100 transition-all duration-300 ease-in-out\">{language === \"EN\" ? \"Change language\" : \"Zmień język\"}</span>\r\n                {language === \"PL\" ? \"EN\" : \"PL\"}\r\n            </button>\r\n\r\n            <div className=\"hero w-full h-64 flex flex-col mt-24 mb-12 font-bold shadow-lg\">\r\n                <h1 className=\"text-center text-2xl lg:text-3xl col-span-3 my-auto\">\r\n                    {title}\r\n                </h1>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default ContentHeader;\r\n\r\n\r\nContentHeader.propTypes = {\r\n    title: PropTypes.string, \r\n    triggerDarkMode: PropTypes.func, \r\n    changeLanguage: PropTypes.func, \r\n    language: PropTypes.string, \r\n    dark: PropTypes.bool\r\n}","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { LanguageContext } from './context/Contexts';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Sidebar({ choseMode, onHideClick }) {\r\n\r\n    const { language } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <nav className=\"sidebar bg-gray-200 dark:bg-gray-700 h-full w-56 fixed  inset-y-0 left-0 transform -translate-x-full transition duration-300 ease-out z-40 \">\r\n            <button type=\"button\" className=\"absolute top-0 left-0 classic-btn bg-gray-300 dark:bg-gray-600 dark:hover:bg-green-600 dark:text-gray-300 text-gray-500 hover:bg-green-200 h-12 w-12 ml-5 mt-5 mb-10\" onClick={onHideClick}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n            </button>\r\n            <div className=\"mx-auto mt-28 flex flex-col flex-wrap content-center w-10/12\">\r\n                <Link to='/'>\r\n                    <button className=\"sidebar-elem\" onClick={onHideClick}>{language === \"EN\" ? \"Home\" : \"Strona główna\"}</button>\r\n                </Link>\r\n                <Link to='/'>\r\n                    <button className=\"sidebar-elem\" onClick={() => { choseMode(\"&casual=true\") }}>{language === \"EN\" ? \"Casual conversation\" : \"Smalltalk z chatbotem\"}</button>\r\n                </Link>\r\n                <Link to='/'>\r\n                    <button className=\"sidebar-elem\" onClick={() => { choseMode(\"\") }}>{language === \"EN\" ? \"Politechnics Chatbot\" : \"Odpowiadanie na pytania\"}</button>\r\n                </Link>\r\n                <Link to='/about' onClick={onHideClick}>\r\n                    <button className=\"sidebar-elem\">{language === \"EN\" ? \"About\" : \"Detale\"}</button>\r\n                </Link>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nSidebar.propTypes = {\r\n    choseMode: PropTypes.func, \r\n    onHideClick: PropTypes.func\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst About = ({ dark, language }) => {\r\n    const [title, setTitle] = useState(\"Model memory dependence on its score\");\r\n    useEffect(() => {\r\n        if (language === \"EN\")\r\n            setTitle(\"Model memory dependence on its score\")\r\n        else\r\n            setTitle(\"Zależność pamięci zajmowanej przez model do wyniku\")\r\n    }, [language])\r\n\r\n    return (\r\n        <section className=\"group w-10/12 md:10/12 md:max-w-6xl mx-auto\" >\r\n            <h2 className=\"text-left font-bold border-b-2 border-gray-300 pb-6 text-xl lg:text-xl lg:pb-10\">\r\n                {language === \"EN\" ? \"Research statistics\" : \"Statystyki\"}\r\n            </h2>\r\n            <h3 className='my-4'>{language===\"EN\" ? \"Model tested on 1000 questions\" : \"Model testowany dla 1000 pytań\"}</h3>\r\n            <div className=\"w-full my-10 overflow-x-auto p-0\">\r\n                <table border=\"1\" className=\"tab mx-auto text-xs p-2 transform scale-0 shadow-lg border\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>&nbsp;</th>\r\n                            <th>avg</th>\r\n                            <th>std</th>\r\n                            <th>min</th>\r\n                            <th>max</th>\r\n                            <th>median</th>\r\n                            <th>memory</th>\r\n                            <th>perf_ratio</th>\r\n                            <th>avg_ans_len</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>abhilash1910/albert-squad-v2</th>\r\n                            <td>0.3187</td>\r\n                            <td>0.2672</td>\r\n                            <td>-0.0979</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.2324</td>\r\n                            <td>190</td>\r\n                            <td>0.1677</td>\r\n                            <td>3.9610</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>twmkn9/distilroberta-base-squad2</th>\r\n                            <td>0.3939</td>\r\n                            <td>0.2910</td>\r\n                            <td>-0.1065</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.3102</td>\r\n                            <td>313</td>\r\n                            <td>0.1259</td>\r\n                            <td>2.7060</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>mrm8488/bert-tiny-5-finetuned-squadv2</th>\r\n                            <td>0.4373</td>\r\n                            <td>0.2926</td>\r\n                            <td>-0.1060</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.3873</td>\r\n                            <td>16</td>\r\n                            <td>2.7334</td>\r\n                            <td>3.8140</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>a-ware/mobilebert-squadv2</th>\r\n                            <td>0.4522</td>\r\n                            <td>0.2865</td>\r\n                            <td>-0.0952</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.4172</td>\r\n                            <td>100</td>\r\n                            <td>0.4522</td>\r\n                            <td>3.5540</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>mrm8488/bert-small-finetuned-squadv2</th>\r\n                            <td>0.4653</td>\r\n                            <td>0.2954</td>\r\n                            <td>-0.0802</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.4207</td>\r\n                            <td>110</td>\r\n                            <td>0.4230</td>\r\n                            <td>3.9750</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>distilbert-base-cased-distilled-squad</th>\r\n                            <td>0.4869</td>\r\n                            <td>0.3004</td>\r\n                            <td>-0.0925</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.4715</td>\r\n                            <td>249</td>\r\n                            <td>0.1955</td>\r\n                            <td>3.8000</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>deepset/bert-base-cased-squad2</th>\r\n                            <td>0.4941</td>\r\n                            <td>0.2949</td>\r\n                            <td>-0.0925</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.4724</td>\r\n                            <td>413</td>\r\n                            <td>0.1196</td>\r\n                            <td>3.8390</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>deepset/roberta-base-squad2</th>\r\n                            <td>0.5270</td>\r\n                            <td>0.3023</td>\r\n                            <td>-0.0660</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.5194</td>\r\n                            <td>473</td>\r\n                            <td>0.1114</td>\r\n                            <td>3.7310</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>twmkn9/albert-base-v2-squad2</th>\r\n                            <td>0.5306</td>\r\n                            <td>0.2986</td>\r\n                            <td>-0.0828</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.5220</td>\r\n                            <td>46</td>\r\n                            <td>1.1535</td>\r\n                            <td>5.1660</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>ktrapeznikov/albert-xlarge-v2-squad-v2</th>\r\n                            <td>0.5604</td>\r\n                            <td>0.2882</td>\r\n                            <td>-0.0828</td>\r\n                            <td>1.0000</td>\r\n                            <td>0.5606</td>\r\n                            <td>224</td>\r\n                            <td>0.2502</td>\r\n                            <td>4.8520</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div className=\"flex justify-center \">\r\n                <div className=\"border rounded px-5 shadow-lg w-11/12 h-min bg-opacity-0\">\r\n                    <Chart\r\n                        chartType=\"LineChart\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={[\r\n                            ['memory', 'score'],\r\n                            [16.0, 0.4373],\r\n                            [46.0, 0.5306],\r\n                            [100.0, 0.4522],\r\n                            [110.0, 0.4653],\r\n                            [190.0, 0.3187],\r\n                            [224.0, 0.5604],\r\n                            [249.0, 0.4869],\r\n                            [313.0, 0.3939],\r\n                            [413.0, 0.4941],\r\n                            [473.0, 0.527]\r\n                        ]}\r\n                        options={dark ? {\r\n                            hAxis: {\r\n                                title: 'Memory',\r\n                                color: '#FFF',\r\n                                titleTextStyle: { color: '#FFF' },\r\n                                textStyle: { color: '#FFF' }\r\n                            },\r\n                            vAxis: {\r\n                                title: 'Score',\r\n                                color: '#FFF',\r\n                                titleTextStyle: { color: '#FFF' },\r\n                                textStyle: { color: '#FFF' }\r\n                            },\r\n                            backgroundColor: '#1F2937',\r\n                            title: title,\r\n                            titleTextStyle: { color: '#FFF' },\r\n                            legendTextStyle: { color: '#FFF' },\r\n                        }\r\n                            :\r\n                            {\r\n                                hAxis: {\r\n                                    title: 'Memory',\r\n                                },\r\n                                vAxis: {\r\n                                    title: 'Score',\r\n                                },\r\n                                title: title,\r\n                            }\r\n                        }\r\n                        rootProps={{ 'data-testid': '1' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default About;\r\n\r\n\r\nAbout.propTypes = {\r\n    dark: PropTypes.bool, \r\n    language: PropTypes.string\r\n}","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"mt-10 h-20 border-t-2 w-9/12 mx-auto dark:border-gray-700\">\r\n            <h6 className='text-gray-300 dark:text-gray-700 text-sm text-center'>&reg; Chatbot made by Paweł Okapiec</h6>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { LanguageContext, TextContext } from './context/Contexts';\r\nimport ContentTexts from './ContentTexts';\r\nimport ContentHeader from './ContentHeader';\r\nimport Sidebar from './Sidebar';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport About from './About';\r\nimport Footer from './Footer';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Content({ choseMode, onClickHideSidebar }) {\r\n\r\n    const { language, setlanguage } = useContext(LanguageContext)\r\n    const { settextId } = useContext(TextContext)\r\n\r\n    const [dark, setdark] = useState(false);\r\n    const [texts, settexts] = useState([]);\r\n\r\n    const triggerDarkMode = () => {\r\n        const html = document.querySelector(\"html\");\r\n        html.classList.toggle(\"dark\");\r\n\r\n        if (html.classList.contains('dark')) {\r\n            setdark(true)\r\n            localStorage.setItem('dark', true)\r\n        } else {\r\n            setdark(false)\r\n            localStorage.setItem('dark', false)\r\n        }\r\n    }\r\n\r\n    const changeLanguage = (e) => {\r\n        // console.log(e.currentTarget.textContent)\r\n        if (language === 'EN') {\r\n            // e.currentTarget.textContent = \"EN\"\r\n            setlanguage(\"PL\")\r\n            localStorage.setItem('lang', 'PL')\r\n        } else {\r\n            // e.currentTarget.textContent = \"PL\"\r\n            setlanguage(\"EN\")\r\n            localStorage.setItem('lang', 'EN')\r\n        }\r\n    }\r\n\r\n    const setAndUnfoldText = (item, e) => {\r\n        console.log(item.id)\r\n        settextId(item.id)\r\n        const textElem = e.currentTarget.children[1]\r\n        const allTexts = document.querySelectorAll('.QA-text')\r\n\r\n        for (const text of allTexts) {\r\n            if (!text.classList.contains('h-10') && text !== textElem) {\r\n                text.classList.toggle('h-10')\r\n                text.classList.toggle('h-80')\r\n                text.classList.toggle('overflow-auto')\r\n                text.classList.toggle('overflow-hidden')\r\n                text.nextElementSibling.classList.toggle('invisible')\r\n            }\r\n        }\r\n        textElem.classList.toggle('h-10')\r\n        textElem.classList.toggle('h-80')\r\n        textElem.classList.toggle('overflow-auto')\r\n        textElem.classList.toggle('overflow-hidden')\r\n        textElem.nextElementSibling.classList.toggle('invisible')\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const darkMode = localStorage.getItem('dark')\r\n        const lang = localStorage.getItem('lang')\r\n\r\n        if (lang === \"PL\") setlanguage(\"PL\")\r\n        if (darkMode === \"true\") triggerDarkMode()\r\n\r\n        const getData = async () => {\r\n            await axios.get('/api/texts')\r\n                .then(response => {\r\n                    const texts = response.data\r\n                    settexts(texts.texts)\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n        getData()\r\n        return\r\n    }, []);\r\n\r\n    const headerProps = {\r\n        triggerDarkMode: triggerDarkMode,\r\n        language: language,\r\n        dark: dark,\r\n        changeLanguage: changeLanguage\r\n    }\r\n\r\n    return (\r\n        <main className=\"content-site flex flex-col flex-wrap content-center dark:bg-gray-800 dark:text-gray-200 relative min-h-screen\">\r\n\r\n            <Router>\r\n                <Sidebar choseMode={choseMode} onHideClick={onClickHideSidebar} />\r\n                <Switch>\r\n                    <Route path='/' exact>\r\n                        <>\r\n                            <ContentHeader title={language === \"EN\" ? \"Warsaw institute of technology information\" : \"Informacje o Politechnice Warszawskiej\"} {...headerProps} />\r\n                            <ContentTexts texts={texts} language={language} setAndUnfoldText={setAndUnfoldText} />\r\n                            <Footer />\r\n                        </>\r\n                    </Route>\r\n                    <Route path='/about'>\r\n                        <>\r\n                            <ContentHeader title={language === \"EN\" ? \"Research results\" : \"Wyniki badań\"} {...headerProps} />\r\n                            <About dark={dark} language={language}/>\r\n                            <Footer />\r\n                        </>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nContent.propTypes = {\r\n    choseMode: PropTypes.func, \r\n    onClickHideSidebar: PropTypes.func\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SidebarToggler({ onHideClick }) {\r\n    return (\r\n\r\n        <button type=\"button\" className=\"group sidebar-toggler classic-btn bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 fixed top-5 left-5 transition duration-300 ease-in-out select-none\" onClick={onHideClick} >\r\n            <span className=\"p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-36 absolute left-10 transform scale-0 group-hover:scale-100 transition-all duration-300 ease-in-out\">See chatbot options</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"group-hover:animate-wiggle h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h7\" />\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nSidebarToggler.propTypes = {\r\n    onHideClick: PropTypes.func\r\n}","import { useState } from 'react';\nimport ChatRoom from './components/ChatRoom';\nimport ChatToggler from './components/ChatToggler';\nimport Content from './components/Content';\nimport SidebarToggler from './components/SidebarToggler';\nimport React from 'react';\nimport { LanguageContext, TextContext, CasualContext } from './components/context/Contexts';\nimport './App.css';\nimport axios from 'axios';\n// axios.defaults.baseURL = 'http://192.168.1.103:8000';\n\n\nfunction App() {\n  // useEffect(() => {\n  //   if (!(\"ontouchstart\" in document.documentElement)) {\n  //     document.documentElement.className += \" no-touch\";\n  //     }\n  // }, [])\n\n  const [casualQuery, setcasualQuery] = useState(\"&casual=true\")\n  const [language, setlanguage] = useState(\"EN\");\n  const [textId, settextId] = useState(1);\n\n  const onClickHideChat = () => {\n    const sidebar = document.querySelector('.sidebar')\n    if (!sidebar.classList.contains('-translate-x-full')) onClickHideSidebar()\n\n    const chat = document.querySelector('.chat-room')\n    const toggler = document.querySelector(\".chat-toggler\")\n    const content = document.querySelector(\".content-site\")\n    const html = document.querySelector(\"html\")\n\n    chat.classList.toggle(\"scale-100\");\n    chat.classList.toggle(\"scale-0\");\n\n    toggler.classList.toggle(\"bottom-10\")\n    toggler.classList.toggle(\"-bottom-10\")\n    toggler.classList.toggle(\"right-10\")\n    toggler.classList.toggle(\"-right-10\")\n\n    content.classList.toggle(\"filter\")\n    content.classList.toggle(\"blur-sm\")\n\n    if (!html.classList.contains('dark')) {\n      content.classList.toggle('bg-gray-200')\n    }\n  }\n\n  const onClickHideSidebar = () => {\n    const chat = document.querySelector('.chat-room')\n    if (chat.classList.contains('scale-100')) onClickHideChat()\n\n    const sidebar = document.querySelector('.sidebar')\n    sidebar.classList.toggle(\"-translate-x-full\");\n  }\n\n  const choseMode = (query) => {\n    setcasualQuery(query)\n    onClickHideSidebar()\n    onClickHideChat()\n\n  }\n\n  const onEscapeClose = (e) => {\n    const chat = document.querySelector('.chat-room')\n    const sidebar = document.querySelector('.sidebar')\n    if (e.keyCode === 27) {\n      if (chat.classList.contains('scale-100'))\n        onClickHideChat()\n      else if (!sidebar.classList.contains('-translate-x-full'))\n        onClickHideSidebar()\n    }\n  }\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     onClickHideChat()\n  //   }, 1800)    \n  // }, []);\n\n  return (\n    <div className=\"m-0\" onKeyUp={onEscapeClose}>\n      <CasualContext.Provider value={{casualQuery, setcasualQuery}}>\n        <TextContext.Provider value={{ textId, settextId }}>\n          <LanguageContext.Provider value={{ language, setlanguage }}>\n            <Content choseMode={choseMode} onClickHideSidebar={onClickHideSidebar} />\n            <ChatRoom casualQuery={casualQuery} onHideClick={onClickHideChat} />\n          </LanguageContext.Provider>\n          <SidebarToggler onHideClick={onClickHideSidebar} />\n          <ChatToggler onHideClick={onClickHideChat} />\n        </TextContext.Provider>\n      </CasualContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@themesberg/flowbite';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\nserviceWorkerRegistration.register();\n\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}