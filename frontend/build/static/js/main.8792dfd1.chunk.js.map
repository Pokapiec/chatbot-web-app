{"version":3,"sources":["components/context/Contexts.js","components/Message.js","components/ChatName.js","components/ChatInput.js","components/ChatRoom.js","components/ChatToggler.js","components/ContentTexts.js","components/ContentHeader.js","components/Sidebar.js","components/Content.js","components/SidebarToggler.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["LanguageContext","createContext","TextContext","ChatView","msg","side","className","src","alt","ChatName","onHideClick","useState","maximized","setMaximized","width","height","cx","cy","r","fill","type","onClick","chat","document","querySelector","messages","elem","classList","toggle","contains","replace","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","xmlns","fillRule","clipRule","ChatInput","userMessage","updateInput","onEnterClick","language","addMessage","useContext","placeholder","value","onChange","onKeyDown","ChatRoom","casualQuery","textId","setMessages","useEffect","reverse","setUserMessage","getAnswer","a","url","console","log","axios","get","resp","answer","data","botAnswer","addBotMessage","newMessages","ids2","map","response","newerMessages","Math","max","concat","ids","id","key","e","target","preventDefault","ChatToggler","delayLeaveTool","delayTooltip","ContentTexts","texts","setAndUnfoldText","length","item","title_en","title_pl","text_en","text_pl","ContentHeader","triggerDarkMode","changeLanguage","dark","Sidebar","choseMode","to","Content","onClickHideSidebar","setlanguage","settextId","setdark","settexts","html","localStorage","setItem","darkMode","getItem","lang","langTrigger","textContent","changeLanguageLoad","then","catch","error","getData","path","exact","textElem","currentTarget","children","allTexts","querySelectorAll","text","SidebarToggler","onMouseEnter","onMouseLeave","App","setcasualQuery","onClickHideChat","toggler","content","tooltip","setTimeout","Provider","query","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8792dfd1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const LanguageContext = createContext(null)\r\n\r\nexport const TextContext = createContext(null)\r\n\r\nexport const UrlContext = createContext(null)\r\n\r\n","import React from 'react';\r\n\r\nexport default function ChatView({msg, side}) {\r\n    const photoRight = \"https://images.unsplash.com/photo-1549078642-b2ba4bda0cdb?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\"\r\n    const photoLeft = \"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\"\r\n\r\n    return (\r\n        <div className=\"chat-message \">\r\n            <div className={`flex items-end ${side === 'right' ? \"justify-end\" : \"\"}`}>\r\n                <div className={`flex flex-col space-y-2 text-xs max-w-xs mx-2 ${side === 'right' ? \"order-1 items-end\" : \"order-2 items-start\"} `}>\r\n                <div><span className={`px-4 py-2 rounded-lg inline-block rounded-${side === 'right' ? \"br\" : \"bl\"}-none ${side === 'right' ? \"bg-gray-300 text-gray-600\" : \"bg-blue-600 text-white\"}  `}>{msg}</span></div>\r\n                </div>\r\n                <img src={side === 'right' ? photoRight : photoLeft} alt=\"My profile\" className={`w-6 h-6 rounded-full ${side === 'right' ? \"order-2\" : \"order-1\"}`}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* <div className=\"chat-message\">\r\n              <div className=\"flex items-end justify-end\">\r\n                  <div className=\"flex flex-col space-y-2 text-xs max-w-xs mx-2 order-1 items-end\">\r\n                    <div><span className=\"px-4 py-2 rounded-lg inline-block rounded-br-none bg-blue-600 text-white \">Your error message says permission denied, npm global installs must be given root privileges.</span></div>\r\n                  </div>\r\n                  <img src=\"https://images.unsplash.com/photo-1590031905470-a1a1feacbb0b?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=3&amp;w=144&amp;h=144\" alt=\"My profile\" className=\"w-6 h-6 rounded-full order-2\"/>\r\n              </div>\r\n            </div> */","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport default function ChatName({ onHideClick }) {\r\n\r\n    const [maximized, setMaximized] = useState(false);\r\n\r\n    const maximize = () => {\r\n        const chat = document.querySelector('.chat-room');\r\n        const messages = document.querySelector('#messages-place');\r\n\r\n        const chatClasses = ['w-10/12', 'md:w-96', 'bottom-2', 'right-2', 'bottom-0', 'right-0', 'w-full', 'rounded-lg', 'h-screen']\r\n        for(const elem of chatClasses) {\r\n            chat.classList.toggle(elem)\r\n        }\r\n\r\n        const messagesClasses = ['h-72', 'h-full']\r\n        if (messages.classList.contains('h-72')) {\r\n            messages.classList.replace('h-72', 'h-full')\r\n        } else {\r\n            messages.classList.replace('h-full', 'h-72')\r\n        }\r\n        // for(const elem of messagesClasses) {\r\n        //     messages.classList.toggle(elem)\r\n        // }\r\n\r\n        if (maximized) setMaximized(false)\r\n        else setMaximized(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"transition duration-300 ease-in-out flex justify-between border-b border-gray-200 dark:border-gray-900 py-3 px-3\">\r\n            <div className=\"m-0 flex items-center space-x-4\">\r\n                <img src=\"https://cdn.technologyadvice.com/wp-content/uploads/2018/02/friendly-chatbot.jpg\" alt=\"\" className=\"w-10 h-10 rounded-full\" />\r\n                <div className=\"flex flex-col leading-tight\">\r\n                    <div className=\"text-lg mt-1 flex items-center\">\r\n                        <span className=\"text-gray-700 dark:text-gray-200 mr-3\">Chatbot</span>\r\n                        <span className=\"text-green-500\">\r\n                            <svg width=\"10\" height=\"10\">\r\n                                <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"currentColor\"></circle>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n                <button type=\"button\" className=\"classic-btn text-gray-500 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-green-500 h-10 w-10\" onClick={maximize}>\r\n                    {!maximized ?\r\n                    (<svg className=\"h-6 w-6 fill-stroke\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\"></path>  <polyline points=\"16 4 20 4 20 8\"></polyline>  <line x1=\"14\" y1=\"10\" x2=\"20\" y2=\"4\"></line>  <polyline points=\"8 20 4 20 4 16\"></polyline>  <line x1=\"4\" y1=\"20\" x2=\"10\" y2=\"14\"></line></svg>)\r\n                    :\r\n                    (<svg className=\"h-6 w-6 fill-stroke\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">  <path stroke=\"none\" d=\"M0 0h24v24H0z\"></path>  <polyline points=\"5 9 9 9 9 5\"></polyline>  <line x1=\"3\" y1=\"3\" x2=\"9\" y2=\"9\"></line>  <polyline points=\"5 15 9 15 9 19\"></polyline>  <line x1=\"3\" y1=\"21\" x2=\"9\" y2=\"15\"></line>  <polyline points=\"19 9 15 9 15 5\"></polyline>  <line x1=\"15\" y1=\"9\" x2=\"21\" y2=\"3\"></line>  <polyline points=\"19 15 15 15 15 19\"></polyline>  <line x1=\"15\" y1=\"15\" x2=\"21\" y2=\"21\"></line></svg>)\r\n                    }\r\n                    \r\n                </button>\r\n\r\n                \r\n\r\n                <button type=\"button\" className=\"classic-btn text-gray-500 dark:text-gray-100 hover:bg-gray-300 dark:hover:bg-green-500 h-10 w-10\" onClick={onHideClick}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                </button>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { LanguageContext } from './context/Contexts';\r\nimport { useContext } from 'react';\r\n\r\nexport default function ChatInput({ userMessage, updateInput, onEnterClick, addMessage }) {\r\n\r\n    const { language } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <div className=\"border-t border-gray-200 dark:border-gray-900 px-4 pt-4 mb-5 sm:mb-3 text-2lg\">\r\n            <div className=\"relative flex\">\r\n                <span className=\"absolute inset-y-0 flex items-center\">\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 dark:text-gray-200 dark:hover:text-gray-800 hover:bg-gray-300 h-12 w-12 \">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 \">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </span>\r\n                <input type=\"text\" placeholder={language===\"EN\" ? \"Write Something\" : \"Napisz coś\"} className=\"w-full border-none focus:outline-none focus:placeholder-gray-400 text-gray-600 dark:text-gray-200 placeholder-gray-600 dark:placeholder-gray-300 pl-12 bg-gray-200 dark:bg-gray-600 rounded-full py-3 \" \r\n                value={userMessage} onChange={updateInput} onKeyDown={onEnterClick}/>\r\n                <div className=\"absolute right-0 items-center inset-y-0 hidden sm:flex\">\r\n                    {/* <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"></path>\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button type=\"button\" className=\"classic-btn text-gray-500 hover:bg-gray-300 h-10 w-10\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"h-6 w-6 text-gray-600\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <button  onClick={addMessage} type=\"button\" className=\"classic-btn text-white bg-blue-500 hover:bg-blue-400 h-12 w-12\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-6 w-6 transform rotate-90\">\r\n                            <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                        </svg>\r\n                    </button> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { LanguageContext, TextContext } from './context/Contexts';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport Message from './Message';\r\nimport ChatName from './ChatName';\r\nimport ChatInput from './ChatInput';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ChatRoom({ onHideClick, casualQuery }) {\r\n\r\n  const { language } = useContext(LanguageContext)\r\n  const { textId } = useContext(TextContext)\r\n\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (language === \"EN\") {\r\n      setMessages([[1, \"Hey i'm your personal Chatbot, how can i help?\", \"left\"]].reverse())\r\n    } else {\r\n      setMessages([[1, \"Hej! Jestem twoim personalnym Chatbotem, jak mogę pomóc?\", \"left\"]].reverse())\r\n    }\r\n    return\r\n  }, [language]);\r\n\r\n  const [userMessage, setUserMessage] = useState(\"\")\r\n\r\n\r\n  const getAnswer = async () => {\r\n    \r\n    let url = `http://192.168.1.101:5000/api/response?message=${userMessage}&lang=${language}`\r\n    // let url = `http://127.0.0.1:5000/response?message=${userMessage}&lang=${language}`\r\n    if (casualQuery) url += casualQuery\r\n    else url += `&textid=${textId}`\r\n    console.log(url)\r\n\r\n    const resp = await axios.get(url);\r\n    // const resp = await axios.get(`https://chatbot-models-app.herokuapp.com/response?message=${userMessage}`);\r\n    const answer = resp.data\r\n    console.log(answer)\r\n    const botAnswer = answer.answer\r\n    if (botAnswer === 'failed') return false\r\n    return botAnswer\r\n  }\r\n\r\n  const addBotMessage = async (newMessages) => {\r\n    const ids2 = newMessages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const response = await getAnswer()\r\n    if (response) {\r\n      const newerMessages = [[Math.max(...ids2) + 1, response, \"left\"]].concat(newMessages)\r\n      setMessages(newerMessages)\r\n    }\r\n  }\r\n\r\n  const addMessage = async () => {\r\n    const ids = messages.map(elem => {\r\n      return elem[0]\r\n    })\r\n    const newMessages = [[Math.max(...ids) + 1, userMessage, \"right\"]].concat(messages)\r\n    setMessages(newMessages)\r\n    // console.log(messages)\r\n    setUserMessage(\"\")\r\n    addBotMessage(newMessages)\r\n  }\r\n\r\n  const updateInput = (e) => {\r\n    setUserMessage(e.target.value)\r\n    // console.log(userMessage)\r\n  }\r\n\r\n  const onEnterClick = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      addMessage()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"chat-room m-0 w-10/12 md:w-96 border-2 rounded-lg fixed bottom-2 right-2 bg-white dark:bg-gray-700 dark:text-gray-100 dark:border-gray-800 transform scale-0 transition-all duration-300 ease-in-out shadow-lg z-40\" >\r\n      <div id=\"messages\" className=\"flex-1 p:2 justify-between flex flex-col h-full\">\r\n        <ChatName onHideClick={onHideClick} />\r\n        <div id=\"messages-place\" className=\"h-72 flex content-end flex-col-reverse space-y-4 space-y-reverse p-3 overflow-y-auto scrollbar-thumb-blue scrollbar-thumb-rounded scrollbar-track-blue-lighter scrollbar-w-2 scrolling-touch\">\r\n          {messages.map((msg) => {\r\n            return (\r\n              <Message key={msg[0]} msg={msg[1]} side={msg[2]} />\r\n            )\r\n          })}\r\n        </div>\r\n        <ChatInput userMessage={userMessage} updateInput={updateInput} onEnterClick={onEnterClick} addMessage={addMessage} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default function ChatToggler({ onHideClick, delayLeaveTool, delayTooltip }) {\r\n    \r\n    return (\r\n        <div className=\"select-none\">\r\n            <button type=\"button\" className=\"group chat-toggler classic-btn bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 fixed bottom-10 right-10 z-1 \" onClick={onHideClick}>\r\n                <span className=\"p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-20 absolute bottom-14 transition-all duration-500 ease-in-out invisible group-hover:visible\">Chat a bit</span>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 group-hover:animate-wiggle\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z\" />\r\n                </svg>\r\n\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\n\r\nconst ContentTexts = ({ texts, language, setAndUnfoldText }) => {\r\n    \r\n    return (\r\n        <div className=\"flex flex-col flex-wrap content-center w-full\">\r\n            {texts.length > 0\r\n                ?\r\n                (texts.map((item) => (\r\n                    <div className=\"group content-container w-11/12 md:10/12 md:max-w-6xl border-2 \" onClick={(e) => { setAndUnfoldText(item, e) }} key={item.id}>\r\n                        <h2 className=\"text-left font-bold border-b-2 border-gray-300 pb-6 text-xl lg:text-xl lg:pb-10\">\r\n                            {language === \"EN\" ? item.title_en : item.title_pl}\r\n                        </h2>\r\n                        <div className=\"QA-text mt-8 text-left overflow-auto transition-height duration-300 ease-in-out h-0\">{language === \"EN\" ? item.text_en : item.text_pl}\r\n                        </div>\r\n                    </div>\r\n                )))\r\n                :\r\n                (<div className=\"content-container max-w-6xl border-2 w-9/12\" key=\"1\">\r\n                    <h2 className=\"text-left font-bold border-b-2 border-gray-300 pb-4\">\r\n                        {language === \"EN\" ? \"There has been a problem\" : \"Wystąpił problem\"}\r\n                    </h2>\r\n                    <div className=\"QA-text mt-5\">\r\n                        {language === \"EN\" ? \"No article avilable right now\" : \"Nie znaleziono żadnego artykułu\"}\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentTexts;\r\n","import React from 'react';\r\n\r\nconst ContentHeader = ({ triggerDarkMode, changeLanguage, language, dark }) => {\r\n    return (\r\n        <div className=\"\">\r\n            <button type=\"button\" className=\"has-tooltip classic-btn dark:bg-gray-800 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 z-1 transition duration-300 ease-in-out absolute top-5 right-5 select-none\" onClick={triggerDarkMode}>\r\n                <span className=\"tooltip p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-28 absolute top-14 right-2\">Change theme</span>\r\n\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    {dark\r\n                        ?\r\n                        (<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />)\r\n                        :\r\n                        (<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />)\r\n                    }\r\n                </svg>\r\n            </button>\r\n\r\n            <button id=\"lang\" type=\"button\" className=\"has-tooltip classic-btn  dark:bg-gray-800 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 z-1 transition duration-300 ease-in-out absolute top-5 right-20 select-none\" onClick={changeLanguage}>\r\n                <span className=\"tooltip p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-32 absolute top-14 right-2\">{language === \"EN\" ? \"Change language\" : \"Zmień język\"}</span>\r\n                {language==\"PL\" ? \"EN\" : \"PL\"}\r\n            </button>\r\n\r\n            <div className=\"text-center text-2xl lg:text-3xl m-5 mb-16 col-span-3 mt-24 md:mt-10\">\r\n                {language === \"EN\" ? \"Warsaw institute of technology information\" : \"Informacje o Politechnice Warszawskiej\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentHeader;\r\n","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { LanguageContext } from './context/Contexts';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Sidebar({ choseMode, onHideClick }) {\r\n\r\n    const { language } = useContext(LanguageContext)\r\n\r\n    return (\r\n        <div className=\"sidebar bg-gray-200 dark:bg-gray-700 h-full w-56 fixed flex flex-col inset-y-0 left-0 transform -translate-x-full transition duration-300 ease-out z-40\">\r\n            <button type=\"button\" className=\" classic-btn bg-gray-300 dark:bg-gray-600 dark:hover:bg-green-600 dark:text-gray-300 text-gray-500 hover:bg-green-100 h-12 w-12 ml-5 mt-5 mb-10\" onClick={onHideClick}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n            </button>\r\n            <Link to='/'>\r\n                <div className=\"sidebar-elem\" onClick={onHideClick}>{language === \"EN\" ? \"Home\" : \"Strona główna\"}</div>\r\n            </Link>\r\n            <Link to='/'>\r\n                <div className=\"sidebar-elem\" onClick={() => { choseMode(\"&casual=true\") }}>{language === \"EN\" ? \"Casual conversation\" : \"Smalltalk z chatbotem\"}</div>\r\n            </Link>\r\n            <Link to='/'>\r\n                <div className=\"sidebar-elem\" onClick={() => { choseMode(\"\") }}>{language === \"EN\" ? \"Politechnics Chatbot\" : \"Odpowiadanie na pytania\"}</div>\r\n            </Link>\r\n            <Link to='/about' onClick={onHideClick}>\r\n                <div className=\"sidebar-elem\">{language === \"EN\" ? \"About\" : \"Detale\"}</div>\r\n            </Link>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { LanguageContext, TextContext } from './context/Contexts';\r\nimport ContentTexts from './ContentTexts';\r\nimport ContentHeader from './ContentHeader';\r\nimport Sidebar from './Sidebar';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nexport default function Content({ choseMode, onClickHideSidebar }) {\r\n\r\n    const { language, setlanguage } = useContext(LanguageContext)\r\n    const { settextId } = useContext(TextContext)\r\n\r\n    const [dark, setdark] = useState(false);\r\n    const [texts, settexts] = useState([]);\r\n\r\n    const triggerDarkMode = () => {\r\n        const html = document.querySelector(\"html\");\r\n        html.classList.toggle(\"dark\");\r\n\r\n        if (html.classList.contains('dark')) {\r\n            setdark(true)\r\n            localStorage.setItem('dark', true)\r\n        } else {\r\n            setdark(false)\r\n            localStorage.setItem('dark', false)\r\n        }\r\n    }\r\n\r\n    const changeLanguageLoad = () => {\r\n        const langTrigger = document.querySelector('#lang')\r\n        console.log(langTrigger)\r\n        langTrigger.textContent = \"EN\"\r\n        setlanguage(\"PL\")\r\n\r\n    }\r\n\r\n    const changeLanguage = (e) => {\r\n        // console.log(e.currentTarget.textContent)\r\n        if (language === 'EN') {\r\n            // e.currentTarget.textContent = \"EN\"\r\n            setlanguage(\"PL\")\r\n            localStorage.setItem('lang', 'PL')\r\n        } else {\r\n            // e.currentTarget.textContent = \"PL\"\r\n            setlanguage(\"EN\")\r\n            localStorage.setItem('lang', 'EN')\r\n        }\r\n    }\r\n\r\n    const setAndUnfoldText = (item, e) => {\r\n        console.log(item.id)\r\n        settextId(item.id)\r\n        const textElem = e.currentTarget.children[1]\r\n        const allTexts = document.querySelectorAll('.QA-text')\r\n\r\n        for (const text of allTexts) {\r\n            if (!text.classList.contains('h-0') && text !== textElem) {\r\n                text.classList.toggle('h-0')\r\n                text.classList.toggle('h-80')\r\n            }\r\n        }\r\n\r\n        textElem.classList.toggle('h-0')\r\n        textElem.classList.toggle('h-80')\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const darkMode = localStorage.getItem('dark')\r\n        const lang = localStorage.getItem('lang')\r\n\r\n        console.log(lang, darkMode)\r\n        console.log(typeof (darkMode))\r\n\r\n        if (lang === \"PL\") changeLanguageLoad()\r\n        if (darkMode === \"true\") triggerDarkMode()\r\n\r\n        const getData = async () => {\r\n            await axios.get('http://192.168.1.101:5000/api/texts')\r\n                .then(response => {\r\n                    const texts = response.data\r\n                    settexts(texts.texts)\r\n                    console.log(texts)\r\n                })\r\n                .catch(error => console.log(\"Hey\"))\r\n            console.log(texts)\r\n        }\r\n        getData()\r\n        return\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"content-site flex flex-col flex-wrap content-center dark:bg-gray-800 dark:text-gray-200 relative min-h-screen\">\r\n\r\n            <ContentHeader triggerDarkMode={triggerDarkMode} changeLanguage={changeLanguage} language={language} dark={dark} />\r\n            <Router>\r\n                <Sidebar choseMode={choseMode} onHideClick={onClickHideSidebar} />\r\n                <Switch>\r\n                    <Route path='/' exact>\r\n                        <ContentTexts texts={texts} language={language} setAndUnfoldText={setAndUnfoldText} />\r\n                    </Route>\r\n                    <Route path='/about' exact>\r\n                        <div>\r\n                            <h1>hello</h1>\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport default function SidebarToggler({ onHideClick, delayLeaveTool, delayTooltip }) {\r\n    return (\r\n\r\n        <button type=\"button\" className=\"group has-tooltip sidebar-toggler classic-btn bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-200 hover:bg-green-200 dark:hover:bg-green-500 h-12 w-12 fixed top-5 left-5 transition duration-300 ease-in-out select-none\" onClick={onHideClick} onMouseEnter={delayTooltip} onMouseLeave={delayLeaveTool}>\r\n            <span className=\"invisible p-1 rounded border border-gray-200 bg-gray-100 dark:bg-gray-900 dark:text-gray-100 shadow-lg ml-4 text-sm w-36 absolute left-10\">See chatbot options</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"group-hover:animate-wiggle h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h7\" />\r\n            </svg>\r\n        </button>\r\n    )\r\n}","import { useState } from 'react';\nimport ChatRoom from './components/ChatRoom';\nimport ChatToggler from './components/ChatToggler';\nimport Content from './components/Content';\nimport SidebarToggler from './components/SidebarToggler';\nimport React from 'react';\nimport { LanguageContext, TextContext } from './components/context/Contexts';\nimport './App.css';\n\n\nfunction App() {\n\n  const [casualQuery, setcasualQuery] = useState(\"&casual=true\")\n  const [language, setlanguage] = useState(\"EN\");\n  const [textId, settextId] = useState(1);\n\n  const onClickHideChat = () => {\n    const sidebar = document.querySelector('.sidebar')\n    if (!sidebar.classList.contains('-translate-x-full')) onClickHideSidebar()\n\n    const chat = document.querySelector('.chat-room')\n    const toggler = document.querySelector(\".chat-toggler\")\n    const content = document.querySelector(\".content-site\")\n    const html = document.querySelector(\"html\")\n\n    chat.classList.toggle(\"scale-100\");\n    chat.classList.toggle(\"scale-0\");\n    toggler.classList.toggle(\"bottom-10\")\n    toggler.classList.toggle(\"-bottom-10\")\n    toggler.classList.toggle(\"right-10\")\n    toggler.classList.toggle(\"-right-10\")\n    content.classList.toggle(\"filter\")\n    content.classList.toggle(\"blur-sm\")\n\n    if (!html.classList.contains('dark')) {\n      content.classList.toggle('bg-gray-200')\n    }\n\n  }\n\n  const onClickHideSidebar = () => {\n    const chat = document.querySelector('.chat-room')\n    if (chat.classList.contains('scale-100')) onClickHideChat()\n\n    const sidebar = document.querySelector('.sidebar')\n    sidebar.classList.toggle(\"-translate-x-full\");\n  }\n\n  const choseMode = (query) => {\n    setcasualQuery(query)\n    onClickHideSidebar()\n    onClickHideChat()\n\n  }\n\n  const delayTooltip = (e) => {\n    const tooltip = e.currentTarget.children[0]\n    setTimeout(() => {\n      if (tooltip.classList.contains('invisible')) {\n        tooltip.classList.toggle('invisible')\n      }\n    }, 500)\n  }\n\n  const delayLeaveTool = (e) => {\n    const tooltip = e.currentTarget.children[0]\n\n    setTimeout(() => {\n      if (!tooltip.classList.contains('invisible')) {\n        tooltip.classList.toggle('invisible')\n      }\n    }, 500)\n  }\n\n  return (\n    <div className=\"m-0 font-sans\">\n\n      <TextContext.Provider value={{ textId, settextId }}>\n        <LanguageContext.Provider value={{ language, setlanguage }}>\n          <Content choseMode={choseMode} onClickHideSidebar={onClickHideSidebar} />\n          <ChatRoom casualQuery={casualQuery} onHideClick={onClickHideChat} />\n        </LanguageContext.Provider>\n        <SidebarToggler onHideClick={onClickHideSidebar} delayTooltip={delayTooltip} delayLeaveTool={delayLeaveTool}/>\n        <ChatToggler onHideClick={onClickHideChat} delayTooltip={delayTooltip} delayLeaveTool={delayLeaveTool}/>\n      </TextContext.Provider>\n\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@themesberg/flowbite';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\nserviceWorkerRegistration.register();\n\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}